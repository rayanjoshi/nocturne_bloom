CNNEncoder:
  input_channels: 40  # Number of features (RSI, MACD, etc.)
  CNN_channels: [16, 32, 16]  # Reduced capacity to prevent overfitting
  kernel_size: [3, 3, 2]
  pool_size: [2, 2, 1]  # Pooling after each CNN layer
  pool_padding: [0,0,0]
  padding: [1, 1, 1]  # kernel_size // 2 for each dimension
  stride: 1
  dropout: 0.4  # Increased dropout for better regularization

LSTMPredictor:
  input_size: 16  # Output size of CNNEncoder (CNN_channels[2])
  hidden_size: 32  # Reduced capacity to prevent overfitting
  num_layers: 2    # Simpler LSTM
  dropout: 0.5     # Higher dropout
  bidirectional: false
  output_size: 1
  batch_first: true

model:
  target_sequence_length: 1  # Predicting the next closing price
  huber_delta: 0.5  # Delta for Huber loss, can be adjusted based on the dataset