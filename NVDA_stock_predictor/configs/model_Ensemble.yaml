model:
  target_sequence_length: 1  # Predicting the next closing price
  huber_delta: 0.5  # Delta for Huber loss, can be adjusted based on the dataset
  cnnWeight: 0.1
  ridgeWeight: 0.9

cnn:
  inputChannels: 40  # Number of features (RSI, MACD, etc.)
  cnnChannels: [16, 32, 16]  # Reduced capacity to prevent overfitting
  kernelSize: [3, 3, 2]
  poolSize: [2, 2, 1]  # Pooling after each CNN layer
  poolPadding: [0,0,0]
  padding: [1, 1, 1]  # kernel_size // 2 for each dimension
  stride: 1
  dropout: [0.3, 0.5]
  outputSize: 1

Ridge:
  alpha: 1.0  # Regularization strength for Ridge regression, can be adjusted based on the dataset

classifiers:
  numEstimators: [200, 150]
  learningRate: 0.08
  maxDepth: [6, 8]
  minSamplesSplit: [10, 8]
  minSamplesLeaf: [4, 3]
  subSample: 0.85
  randomState: 42
  maxFeatures: 'sqrt'
  classWeight: 'balanced'
  C: [0.5, 0.8]
  solver: 'liblinear'
  maxIterations: 1000
  kernel: 'rbf'
  probability: True
  verbose: 0
  MAXEPOCHS: 1

  GBWEIGHT: 0.3
  RFWEIGHT: 0.3
  LOGISTICWEIGHT: 0.2
  SVMWEIGHT: 0.2 

optimiser:
  name: 'adam'
  lr: 0.001 
  weightDecay: 0.0001  # L2 regularization term
  betas: [0.9, 0.999] 
  eps: 1e-08 
  amsgrad: False  # Whether to use AMSGrad variant of Adam
  schedulerMode: 'min'
  schedulerFactor: 0.5 
  schedulerPatience: 5 
  schedulerMinLR: 1e-7 